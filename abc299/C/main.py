#!/usr/bin/env python3
from collections import defaultdict
import sys

def rle(s: str):
    count, ans = 1, []
    for i in range(1,len(s)):
        if s[i] != s[i-1]:
            ans.append([s[i-1], count])
            count = 0
        count+=1
    if s[-1] == "-":
      ans.append([s[-1], count])
    else:
      ans.append([s[-1], count])
    return ans


def solve(N: int, S: str):
  s_count = rle(S)
  max_o_cnt = 0
  for i in range(len(s_count)):
      if s_count[i][0] == "o":
          max_o_cnt = max(max_o_cnt, s_count[i][1])
  if max_o_cnt == 0 or max_o_cnt == N:
      print(-1)
  else:
      print(max_o_cnt)


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
  def iterate_tokens():
    for line in sys.stdin:
      for word in line.split():
        yield word
  tokens = iterate_tokens()
  N = int(next(tokens))  # type: int
  S = next(tokens)  # type: str
  solve(N, S)

if __name__ == '__main__':
  main()
