#!/usr/bin/env python3
import sys


def solve(N: int, T: int, C: "List[int]", R: "List[int]"):
  winner = 0
  candidateList = []
  for i in range(N):
    if C[i] == T:
      candidateList.append(i)
  # 色が T であるカードが 1 枚以上場に出された場合、色が T であるカードのうち値が最大のものを出したプレイヤーが勝者である。
  if len(candidateList):
    max_value = 0
    for i in candidateList:
      if R[i] > max_value:
        max_value = R[i]
        winner = i
  # 色が T であるカードが場に 1 枚も出されなかった場合、プレイヤー 1 が出したカードと同じ色のカードのうち値が最大のものを出したプレイヤーが勝者である。（プレイヤー 1 自身も勝者となり得ることに注意してください。）
  else:
    p1_color = C[0]
    same_colors = [0]
    for i in range(1, N):
      if C[i] == p1_color:
        same_colors.append(i)
    max_value = 0
    for i in same_colors:
      if R[i] > max_value:
        max_value = R[i]
        winner = i
  print(winner+1)


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
  def iterate_tokens():
    for line in sys.stdin:
      for word in line.split():
        yield word
  tokens = iterate_tokens()
  N = int(next(tokens))  # type: int
  T = int(next(tokens))  # type: int
  C = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
  R = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
  solve(N, T, C, R)

if __name__ == '__main__':
  main()
